package missingnumber

import "math"

// Шестой подход: формула суммирования для нахождения суммы n чисел от 1 до n.
// Вычтите значения, хранящиеся в списке, и вы получите недостающее число.
// Временная сложность этого алгоритма равна O(n). Пространственная сложность равна O(1).
// Формула суммирования: Сумма первых n натуральных чисел определяется формулой n * (n + 1)/2.
// Вычисление ожидаемой суммы. Сначала вычислите сумму всех чисел от 1 до n (включая недостающее число),
// используя формулу суммирования.
//
// Вычтите элементы массива: вычтите каждый элемент массива из рассчитанной суммы.
// Результатом будет пропущенное число.

func SummationFind(data []int) (int, bool) {
	size := len(data)
	for i := 0; i < size; i++ {
		if data[i] != size+1 && data[i] != size*3+1 {
			data[(data[i]-1)%(size)] += size * 2
		}
	}

	for i := 0; i < size; i++ {
		if data[i] <= size*2 {
			return i + 1, true
		}
	}
	return math.MaxInt, false
}
